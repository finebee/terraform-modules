name: Terraform CI/CD

on:
  push:
    branches:
      - '**'
jobs:
  changed-files:
    name: Get changes files
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Fetches all history for all branches and tags

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          json: true
          dir_names: true
          dir_names_max_depth: 1
          files_ignore: |
            {.github,.git}/**
            
      - name: List all changed files
        run: echo '${{ steps.changed-files.outputs.all_modified_files }}'

      - name: Set matrix
        id: set-matrix
        run: echo "matrix={\"dir\":${{ steps.changed-files.outputs.all_modified_files }}}" >> "$GITHUB_OUTPUT"

  terraform:
    name: Plan and Apply on Changed Terraform Module
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: [changed-files]
    strategy:
      matrix: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.0.0'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::564407622114:role/github-action-role

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Set Terraform Variables
        run: echo "TF_VAR_KUBIYA_API_KEY=${{ secrets.KUBIYA_API_KEY }}" >> $GITHUB_ENV


      - name: Az CLI login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID_STAGING }}

      - name: Retrieve storage account key
        id: get-storage-key
        run: |
          az storage account keys list --account-name yourstorageaccount --query '[0].value' --output tsv
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID_STAGING }}
        shell: bash

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.0.0'

      - name: Terraform Init and Apply
        run: |
          cd ${{ matrix.dir }}
          export TF_VAR_access_key=${{ steps.get-storage-key.outputs.value }}
          terraform init
          terraform plan -out=tfplan
          # terraform apply -auto-approve tfplan
