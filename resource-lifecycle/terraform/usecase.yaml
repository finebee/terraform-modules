name: "dynamic_infrastructure_resources_creation"
icon: "https://static-00.iconduck.com/assets.00/file-type-terraform-icon-455x512-csyun60o.png"
image: "test-1"
description: |
  ### Delegation Task for Kubiya: End-to-End Dynamic Resource Provisioning and Management

  This task allows users to delegate the entire process of infrastructure resource management to Kubiya with just a few dynamic variables. It provides an end-to-end solution, handling everything from requesting the resource to its approval and cost analysis, without needing user intervention after the initial setup.

  #### How it works:
  1. **Dynamic Input**: The user fills in variables (resource type, size, region) that are mapped to Terraform module variables behind the scenes.
  2. **Automatic Module Generation**: An LLM generates the Terraform module and corresponding files dynamically, tailored to the user's inputs.
  3. **Cost Estimation**: The workflow integrates with Infracost to evaluate the projected cost of the requested resources.
  4. **Approval Process**: If the cost exceeds a configurable threshold, the system requests approval from authorized personnel.
  5. **Resource Provisioning**: After approval, Terraform applies the necessary changes and provisions the resources.
  6. **Post-Creation Management**: Resources are managed over time, with follow-up notifications for keeping or deleting them based on user preference.

  Users can easily create different instances of this task to support various resource types (EC2, S3, RDS, etc.) and custom settings. The task is powered by Kubiya tools, Terraform CLI, and LLMs, ensuring smooth execution in the cloud environment.

  #### Execution Flow:

  ```mermaid
  graph TD
      URR["📩 User Requests Resource(s) (e.g., EC2, S3, RDS)"] --> GTM["🧠 Generate Terraform Module (LLM)"]
      GTM --> TFO["📝 Generate Terraform Files"]
      TFO --> GTP["🛠️ Generate Terraform Plan"]
      GTP --> GPC["💰 Get Cost Estimate (Infracost)"]
      GPC --> CAMC["⚖️ Compare Cost with Threshold"]
      CAMC -->|">= 10%"| RA["🔔 Request Approval if Cost > 10%"]
      CAMC -->|"< 10%"| CR["✅ Provision Resource if Cost < 10%"]
      RA --> WBA["📬 Send Webhook to Approvers"]
      WBA --> AAP["✔️ After Approval, Apply Plan"]
      AAP --> TFA["🚀 Terraform Apply (Provision Resource)"]
      TFA --> STF["📦 Store TF State"]
      CR --> SF["📅 Schedule Follow-up for Resource"]
      SF --> AD["👨‍💻 Ask Developer to Keep/Delete"]
      AD -->|Keep| KS["🔄 Keep Resource & Schedule Next Follow-up"]
      AD -->|Delete| DR["🗑️ Delete Resource"]
      KS --> SF
      DR --> UAP["🔔 Notify All Parties"]
      CR --> IU["📢 Inform User about Resource Access"]
  ```

  #### Key Dependencies:
  - **LLM**: Used to dynamically generate Terraform modules based on user inputs.
  - **Terraform CLI**: Handles the plan, apply, and state management of infrastructure resources.
  - **Infracost**: Provides cost estimation for the resources being requested.
  - **Webhook**: Sends notifications to approvers if cost approval is needed.
  - **Kubiya Tools**: Manages the end-to-end automation of this task, ensuring seamless execution.

  This task ensures that the entire resource lifecycle is managed efficiently, allowing the user to focus on specifying variables while Kubiya automates the rest.

mermaid: |
  
